create sequence "public"."blog_posts_id_seq";

create table "public"."blog_posts" (
    "id" bigint not null default nextval('blog_posts_id_seq'::regclass),
    "title" text not null,
    "slug" text not null,
    "summary" text not null,
    "content" text not null,
    "featured_image" text,
    "author" text not null,
    "published_at" timestamp with time zone not null default now(),
    "category" text not null,
    "tags" text[] default '{}'::text[],
    "status" text not null default 'draft'::text,
    "reading_time" integer not null default 5,
    "locale" text not null default 'en'::text,
    "created_at" timestamp with time zone not null default now(),
    "updated_at" timestamp with time zone not null default now()
);


alter table "public"."blog_posts" enable row level security;

create table "public"."landing_page_contact_form" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "name" text,
    "email" text,
    "subject" text,
    "message" text
);


alter table "public"."landing_page_contact_form" enable row level security;

alter sequence "public"."blog_posts_id_seq" owned by "public"."blog_posts"."id";

CREATE UNIQUE INDEX blog_posts_pkey ON public.blog_posts USING btree (id);

CREATE UNIQUE INDEX blog_posts_slug_key ON public.blog_posts USING btree (slug);

CREATE INDEX idx_blog_posts_category ON public.blog_posts USING btree (category);

CREATE INDEX idx_blog_posts_locale ON public.blog_posts USING btree (locale);

CREATE INDEX idx_blog_posts_published_at ON public.blog_posts USING btree (published_at);

CREATE INDEX idx_blog_posts_slug ON public.blog_posts USING btree (slug);

CREATE INDEX idx_blog_posts_status ON public.blog_posts USING btree (status);

CREATE UNIQUE INDEX landing_page_contact_form_pkey ON public.landing_page_contact_form USING btree (id);

alter table "public"."blog_posts" add constraint "blog_posts_pkey" PRIMARY KEY using index "blog_posts_pkey";

alter table "public"."landing_page_contact_form" add constraint "landing_page_contact_form_pkey" PRIMARY KEY using index "landing_page_contact_form_pkey";

alter table "public"."blog_posts" add constraint "blog_posts_slug_key" UNIQUE using index "blog_posts_slug_key";

set check_function_bodies = off;

CREATE OR REPLACE FUNCTION public.update_updated_at_column()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
BEGIN
  NEW.updated_at = NOW();
  RETURN NEW;
END;
$function$
;

grant delete on table "public"."blog_posts" to "anon";

grant insert on table "public"."blog_posts" to "anon";

grant references on table "public"."blog_posts" to "anon";

grant select on table "public"."blog_posts" to "anon";

grant trigger on table "public"."blog_posts" to "anon";

grant truncate on table "public"."blog_posts" to "anon";

grant update on table "public"."blog_posts" to "anon";

grant delete on table "public"."blog_posts" to "authenticated";

grant insert on table "public"."blog_posts" to "authenticated";

grant references on table "public"."blog_posts" to "authenticated";

grant select on table "public"."blog_posts" to "authenticated";

grant trigger on table "public"."blog_posts" to "authenticated";

grant truncate on table "public"."blog_posts" to "authenticated";

grant update on table "public"."blog_posts" to "authenticated";

grant delete on table "public"."blog_posts" to "service_role";

grant insert on table "public"."blog_posts" to "service_role";

grant references on table "public"."blog_posts" to "service_role";

grant select on table "public"."blog_posts" to "service_role";

grant trigger on table "public"."blog_posts" to "service_role";

grant truncate on table "public"."blog_posts" to "service_role";

grant update on table "public"."blog_posts" to "service_role";

grant delete on table "public"."landing_page_contact_form" to "anon";

grant insert on table "public"."landing_page_contact_form" to "anon";

grant references on table "public"."landing_page_contact_form" to "anon";

grant select on table "public"."landing_page_contact_form" to "anon";

grant trigger on table "public"."landing_page_contact_form" to "anon";

grant truncate on table "public"."landing_page_contact_form" to "anon";

grant update on table "public"."landing_page_contact_form" to "anon";

grant delete on table "public"."landing_page_contact_form" to "authenticated";

grant insert on table "public"."landing_page_contact_form" to "authenticated";

grant references on table "public"."landing_page_contact_form" to "authenticated";

grant select on table "public"."landing_page_contact_form" to "authenticated";

grant trigger on table "public"."landing_page_contact_form" to "authenticated";

grant truncate on table "public"."landing_page_contact_form" to "authenticated";

grant update on table "public"."landing_page_contact_form" to "authenticated";

grant delete on table "public"."landing_page_contact_form" to "service_role";

grant insert on table "public"."landing_page_contact_form" to "service_role";

grant references on table "public"."landing_page_contact_form" to "service_role";

grant select on table "public"."landing_page_contact_form" to "service_role";

grant trigger on table "public"."landing_page_contact_form" to "service_role";

grant truncate on table "public"."landing_page_contact_form" to "service_role";

grant update on table "public"."landing_page_contact_form" to "service_role";

create policy "Enable read access for all users"
on "public"."blog_posts"
as permissive
for select
to public
using (true);


create policy "Enable insert access for all users"
on "public"."landing_page_contact_form"
as permissive
for insert
to public
with check (true);


CREATE TRIGGER "new-landing-page-contact-form" AFTER INSERT ON public.landing_page_contact_form FOR EACH ROW EXECUTE FUNCTION supabase_functions.http_request('https://vetoswvwgsebhxetqppa.supabase.co/functions/v1/landingPageContactFormAlert', 'POST', '{"Content-type":"application/json"}', '{}', '5000');


